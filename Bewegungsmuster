
public class Bewegungsmuster {

	Gui dieGui;
	Steuerung dieSteuerung;
	
	String gegnerString;
	
	int x;
	int y;
	
	int buttonKoordinaten [] = new int [2];
	
	public Bewegungsmuster() {
		

	}

	// Hinterlegt ein aktuelles Feld mit dunkelblauem Hintergrund

	public void setzteAktuelleFigur (String button, String figur, String figur2){
		
		 dieGui.buttonKoordinaten =dieSteuerung.gibButtonKoordinaten(button);
		
		int x,y;

		x = dieSteuerung.gibButtonKoordinaten(button)[0];

		y = dieSteuerung.gibButtonKoordinaten(button)[1];

		dieGui.arraySpielfeld[x][y] = figur;

		dieGui.überschreibeButtons(dieGui.arraySpielfeld);

	}

	//Gibt aktuellen Spieler zurück

	public String getSpieler() {

		return dieGui.spieler;

	}

	
	//--------------------------------------------------------------------------------
	
	public void hochfuellen(String button, String arraySpielfeld [][]) {
		
		buttonKoordinaten = dieSteuerung.gibButtonKoordinaten(button);
		
		x= buttonKoordinaten [0];
		y= buttonKoordinaten [1];
		
		//y-Achse hoch auffüllen
		
		
		for (int i = 1; i < arraySpielfeld.length; i++) {
			
			try {
				
				if (dieGui.pruefeObVerbuendeter(x, y-i)==true) {
					
					break;
					
				} else if(dieGui.pruefeObGegner(x, y-i)!="-1"){
					
					gegnerString = dieGui.pruefeObGegner(x, y-i);
					
					dieGui.schreibeGegnerButton(x, y-i, gegnerString, button);
					
					break;

				}else{
					
					dieGui.setzteFeld(x,y-i,dieGui.iBlauesFeld,"blau");
					
				}
				
				
				
			} catch (Exception e) {
				
				break;
				
			}
			
		}
	}
	//--------------------------------------------------------------------------------
	
 	public void runterfuellen(String button, String arraySpielfeld [][]) {
	
 		buttonKoordinaten = dieSteuerung.gibButtonKoordinaten(button);
 		
 		x= buttonKoordinaten [0];
 		y= buttonKoordinaten [1];
 		
	//y-Achse runter füllen
	
	for (int i = 1; i < arraySpielfeld.length; i++) {
		
		try {
			
			if (dieGui.pruefeObVerbuendeter(x, y+i)==true) {
				
				break;
				
			} else if(dieGui.pruefeObGegner(x,y+i)!="-1"){
				
				gegnerString = dieGui.pruefeObGegner(x, y+i);
				
				dieGui.schreibeGegnerButton(x, y+i,gegnerString,button);
				
				break;

			}else{
				
				dieGui.setzteFeld(x,y+i,dieGui.iBlauesFeld,"blau");
				
			}
			
		} catch (Exception e) {
			break;
		}
		
	}
}
 	//--------------------------------------------------------------------------------
 	
 	public void rechtsfuellen(String button, String arraySpielfeld [][]) {
 		
 		buttonKoordinaten = dieSteuerung.gibButtonKoordinaten(button);
 		
 		x= buttonKoordinaten [0];
 		y= buttonKoordinaten [1];
 		
		//x-Achse nach rechts füllen
		
		for (int i = 1; i < arraySpielfeld.length; i++) {
			 
			try {
				
				if (dieGui.pruefeObVerbuendeter(x+i, y)==true) {
					
					break;
					
				} else if(dieGui.pruefeObGegner(x+i,y)!="-1"){
					
					gegnerString = dieGui.pruefeObGegner(x+i, y);
					
					dieGui.schreibeGegnerButton(x+i, y, gegnerString, button);
					
					break;

				}else{
					
					dieGui.setzteFeld(x+i,y,dieGui.iBlauesFeld,"blau");
					
				}
				
				
				
			} catch (Exception e) {
				break;
			}
			
		}
		
 	}
 	//--------------------------------------------------------------------------------
 	
 	public void linksfuellen(String button, String arraySpielfeld [][]) {
 		
 		buttonKoordinaten = dieSteuerung.gibButtonKoordinaten(button);
 		
 		x= buttonKoordinaten [0];
 		y= buttonKoordinaten [1];

		//x-Achse nach links füllen
		
		for (int i = 1; i < arraySpielfeld.length; i++) {
			
			try {
				
				if (dieGui.pruefeObVerbuendeter(x-i, y)==true) {
					
					break;
					
				} else if(dieGui.pruefeObGegner(x-i,y)!="-1"){
					
					gegnerString = dieGui.pruefeObGegner(x-i, y);
					
					dieGui.schreibeGegnerButton(x-i, y, gegnerString, button);
					
					break;

				}else{
					
					dieGui.setzteFeld(x-i,y,dieGui.iBlauesFeld,"blau");
					
				}
				
				
				
			} catch (Exception e) {
				break;
			}
			
		}
		
		
 	}
 	//--------------------------------------------------------------------------------
 	
 	public void diagonalObenRechtsfuellen(String button, String arraySpielfeld [][]) {
 		
 		buttonKoordinaten = dieSteuerung.gibButtonKoordinaten(button);
 		
 		x= buttonKoordinaten [0];
 		y= buttonKoordinaten [1];

 		//diagonal-Achse nach oben-rechts füllen
		
		for (int i = 1; i < arraySpielfeld.length; i++) {
			
			try {
				
				if (dieGui.pruefeObVerbuendeter(x+i, y-i)==true) {
					
					break;
					
				} else if(dieGui.pruefeObGegner(x+i,y-i)!="-1"){
					
					gegnerString = dieGui.pruefeObGegner(x+i, y-i);
					
					dieGui.schreibeGegnerButton(x+i, y-i, gegnerString, button);
					
					break;

				}else{
					
					dieGui.setzteFeld(x+i,y-i,dieGui.iBlauesFeld,"blau");
					
				}
				
				
				
				
			} catch (Exception e) {
				break;
			}
			
		}
		
		
		
 	}
 	//--------------------------------------------------------------------------------
 	
 	public void diagonalObenLinksfuellen(String button, String arraySpielfeld [][]) {
	
 		buttonKoordinaten = dieSteuerung.gibButtonKoordinaten(button);
 		
 		x= buttonKoordinaten [0];
 		y= buttonKoordinaten [1];

	//diagonal-Achse nach oben-links füllen
	
	for (int i = 1; i < arraySpielfeld.length; i++) {
		
		try {
			
			if (dieGui.pruefeObVerbuendeter(x-i, y-i)==true) {
				
				break;
				
			} else if(dieGui.pruefeObGegner(x-i,y-i)!="-1"){
				
				gegnerString = dieGui.pruefeObGegner(x-i, y-i);
				
				dieGui.schreibeGegnerButton(x-i, y-i, gegnerString, button);
				
				break;

			}else{
				
				dieGui.setzteFeld(x-i,y-i,dieGui.iBlauesFeld,"blau");
				
			}
			
			
			
		} catch (Exception e) {
			break;
		}
		
	}
	
	
	}
 	//--------------------------------------------------------------------------------
 	
	public void diagonalUntenRechtsfuellen(String button, String arraySpielfeld [][]) {
	
		buttonKoordinaten = dieSteuerung.gibButtonKoordinaten(button);
		
		x= buttonKoordinaten [0];
		y= buttonKoordinaten [1];	

	//diagonal-Achse nach unten-rechts füllen
	
	for (int i = 1; i < arraySpielfeld.length; i++) {
		
		try {
			
			if (dieGui.pruefeObVerbuendeter(x+i, y+i)==true) {
				
				break;
				
			} else if(dieGui.pruefeObGegner(x+i,y+i)!="-1"){
				
				gegnerString = dieGui.pruefeObGegner(x+i, y+i);
				
				dieGui.schreibeGegnerButton(x+i, y+i, gegnerString, button);
				
				break;

			}else{
				
				dieGui.setzteFeld(x+i,y+i,dieGui.iBlauesFeld,"blau");
				
			}
			
			
			
		} catch (Exception e) {
			break;
		}
		
	}
	
	
	}
	//--------------------------------------------------------------------------------
	
	public void diagonalUntenLinksfuellen(String button, String arraySpielfeld [][]) {
	
		buttonKoordinaten = dieSteuerung.gibButtonKoordinaten(button);
		
		x= buttonKoordinaten [0];
		y= buttonKoordinaten [1];
		
		//diagonal-Achse nach unten-links füllen
		
		for (int i = 1; i < arraySpielfeld.length; i++) {
			
			try {
				
				if (dieGui.pruefeObVerbuendeter(x-i, y+i)==true) {
					
					break;
					
				} else if(dieGui.pruefeObGegner(x-i,y+i)!="-1"){
					
					gegnerString = dieGui.pruefeObGegner(x-i, y+i);
					
					dieGui.schreibeGegnerButton(x-i, y+i, gegnerString, button);
					
					break;

				}else{
					
					dieGui.setzteFeld(x-i,y+i,dieGui.iBlauesFeld,"blau");
					
				}
				
				
				
			} catch (Exception e) {
				break;
			
			
		}
		
		}
	
	}
	//--------------------------------------------------------------------------------
	
	public void alleRichtungenEinFeldFuellen(String button, String arraySpielfeld [][]) {
		
		buttonKoordinaten = dieSteuerung.gibButtonKoordinaten(button);
		
		x= buttonKoordinaten [0];
		y= buttonKoordinaten [1];
		
		//oben----------------------------------------------------------------------
			
			try {
				
				if (dieGui.pruefeObVerbuendeter(x, y-1)==true) {
					
					
					
				} else if(dieGui.pruefeObGegner(x,y-1)!="-1"){
					
					gegnerString = dieGui.pruefeObGegner(x, y-1);
					
					dieGui.schreibeGegnerButton(x, y-1, gegnerString, button);
					
					

				}else{
					
					dieGui.setzteFeld(x,y-1,dieGui.iBlauesFeld,"blau");
					
				}
				
				
				
				} catch (Exception e) {
				
			
			
				}
			//unten---------------------------------------------------------------------
			
			try {
				
				if (dieGui.pruefeObVerbuendeter(x, y+1)==true) {
					
					
					
				} else if(dieGui.pruefeObGegner(x,y+1)!="-1"){
					
					gegnerString = dieGui.pruefeObGegner(x, y+1);
					
					dieGui.schreibeGegnerButton(x, y+1, gegnerString, button);
					
					

				}else{
					
					dieGui.setzteFeld(x,y+1,dieGui.iBlauesFeld,"blau");
					
				}
				
				
				
				} catch (Exception e) {
				
			
			
				}
			
			//rechts---------------------------------------------------------------------
			
			try {
				
				if (dieGui.pruefeObVerbuendeter(x+1, y)==true) {
					
					
					
				} else if(dieGui.pruefeObGegner(x+1,y)!="-1"){
					
					gegnerString = dieGui.pruefeObGegner(x+1, y);
					
					dieGui.schreibeGegnerButton(x+1, y, gegnerString, button);
					
					

				}else{
					
					dieGui.setzteFeld(x+1,y,dieGui.iBlauesFeld,"blau");
					
				}
				
				
				
				} catch (Exception e) {
				
			
			
				}
			//links---------------------------------------------------------------------
			
			try {
				
				if (dieGui.pruefeObVerbuendeter(x-1, y)==true) {
					
					
					
				} else if(dieGui.pruefeObGegner(x-1,y)!="-1"){
					
					gegnerString = dieGui.pruefeObGegner(x-1, y);
					
					dieGui.schreibeGegnerButton(x-1, y, gegnerString, button);
					
					

				}else{
					
					dieGui.setzteFeld(x-1,y,dieGui.iBlauesFeld,"blau");
					
				}
				
				
				
				} catch (Exception e) {
				
			
			
				}
			//diagonal-oben-rechts---------------------------------------------------------------------
			
			try {
				
				if (dieGui.pruefeObVerbuendeter(x+1, y-1)==true) {
					
					
					
				} else if(dieGui.pruefeObGegner(x+1,y-1)!="-1"){
					
					gegnerString = dieGui.pruefeObGegner(x+1, y-1);
					
					dieGui.schreibeGegnerButton(x+1, y-1, gegnerString, button);
					
					

				}else{
					
					dieGui.setzteFeld(x+1,y-1,dieGui.iBlauesFeld,"blau");
					
				}
				
				
				
				} catch (Exception e) {
				
			
			
				}
			//diagonal-oben-links---------------------------------------------------------------------
			
			try {
				
				if (dieGui.pruefeObVerbuendeter(x-1, y-1)==true) {
					
					
					
				} else if(dieGui.pruefeObGegner(x-1,y-1)!="-1"){
					
					gegnerString = dieGui.pruefeObGegner(x-1, y-1);
					
					dieGui.schreibeGegnerButton(x-1, y-1, gegnerString, button);
					
					

				}else{
					
					dieGui.setzteFeld(x-1,y-1,dieGui.iBlauesFeld,"blau");
					
				}
				
				
				
				} catch (Exception e) {
				
			
			
				}
			//diagonal-unten-rechts---------------------------------------------------------------------
			
			try {
				
				if (dieGui.pruefeObVerbuendeter(x+1, y+1)==true) {
					
					
					
				} else if(dieGui.pruefeObGegner(x+1,y+1)!="-1"){
					
					gegnerString = dieGui.pruefeObGegner(x+1, y+1);
					
					dieGui.schreibeGegnerButton(x+1, y+1, gegnerString, button);
					
					

				}else{
					
					dieGui.setzteFeld(x+1,y+1,dieGui.iBlauesFeld,"blau");
					
				}
				
				
				
				} catch (Exception e) {
				
			
			
				}
			//diagonal-unten-links---------------------------------------------------------------------
			
			try {
				
				if (dieGui.pruefeObVerbuendeter(x-1, y+1)==true) {
					
					
					
				} else if(dieGui.pruefeObGegner(x-1,y+1)!="-1"){
					
					gegnerString = dieGui.pruefeObGegner(x-1, y+1);
					
					dieGui.schreibeGegnerButton(x-1, y+1, gegnerString, button);
					
					

				}else{
					
					dieGui.setzteFeld(x-1,y+1,dieGui.iBlauesFeld,"blau");
					
				}
				
				
				
				} catch (Exception e) {
				
			
			
				}
		
			
			
		
	}
	
	
	//----------------------------------------------------------------------------------------------------------------------------------------
	
	
	public void BauerGoldFeldRunter(String button, String arraySpielfeld [][]) {
		
		buttonKoordinaten = dieSteuerung.gibButtonKoordinaten(button);
		
		x= buttonKoordinaten [0];
		y= buttonKoordinaten [1];
		
		if (y==1) { //für die Züge aus der Startposition
			//y-Achse runter füllen
			
			for (int i = 1; i < 3; i++) {
				
				try {
					
					if (dieGui.pruefeObVerbuendeter(x, y+i)==true) {
					 //bauer kann ncith feld nach vorne wenn verbündeter drauf ist
						break;
						
					}else if(dieGui.pruefeObGegner(x, y+i)!="-1") {
						//bnauer kann nicht feld nach vorne wenn gegner drauf ist
				break;
				//----------------------------------------------------------------------
				
				}else if(dieGui.pruefeObGegner(x-1,y+1)!="-1"){
						//bauer kann 1-2 felder vor oder 1 feld diagonal links gegner schlagen
						dieGui.setzteFeld(x,y+1,dieGui.iBlauesFeld,"blau");
					    dieGui.setzteFeld(x, y+2, dieGui.iBlauesFeld,"blau");
						
						gegnerString = dieGui.pruefeObGegner(x-1, y+1);
						
						dieGui.schreibeGegnerButton(x-1, y+1,gegnerString,button);
						
						break;
				//-----------------------------------------------------------------------	

					}else if(dieGui.pruefeObGegner(x+1,y+1)!="-1"){
						//bauer kann 1-2 felder vor oder 1 feld diagonal rechts gegner schlagen
						gegnerString = dieGui.pruefeObGegner(x+1, y+1);
						
						dieGui.schreibeGegnerButton(x+1, y+1,gegnerString,button);
						
						dieGui.setzteFeld(x,y+1,dieGui.iBlauesFeld,"blau");
					    dieGui.setzteFeld(x, y+2, dieGui.iBlauesFeld,"blau");
						
						break;
				//------------------------------------------------------------------------
						
					}else{
						dieGui.setzteFeld(x,y+i,dieGui.iBlauesFeld,"blau");     //funktioniert: bis zu 2 felder nach vorne ziehen
					}
					
					
				} catch (Exception e) {
					break;
				}
				
			}//Schleife ende For
			
			//-----------------------------------------------------------------------------------
				}else { 
	
		//gilt für alle buttons außer "k"= die Startposition der Bauer

		
								try {
			
									if (dieGui.pruefeObVerbuendeter(x, y+1)==true) {
				
				
				
									} else if(dieGui.pruefeObGegner(x+1,y+1)!="-1"){
				
										gegnerString = dieGui.pruefeObGegner(x+1, y+1);
				
										dieGui.schreibeGegnerButton(x+1, y+1, gegnerString, button);
				
										dieGui.setzteFeld(x,y+1,dieGui.iBlauesFeld,"blau");

									}else if(dieGui.pruefeObGegner(x-1,y+1)!="-1"){
				
										gegnerString = dieGui.pruefeObGegner(x-1, y+1);
				
										dieGui.schreibeGegnerButton(x-1, y+1, gegnerString, button);
				
										dieGui.setzteFeld(x,y+1,dieGui.iBlauesFeld,"blau");
				

									}else{
				
										dieGui.setzteFeld(x,y+1,dieGui.iBlauesFeld,"blau");
				
									}
			
			
			
								} catch (Exception e) {
			
								}
		
							} //Else ende klammer
		}//Methodenende BauerGold
	
	
	
	
	
	
	
	
	
	//---------------------------PFERDE MUSTER WIIIIIIIIIIIIIIIIIIIIIIHAAAAAAAAAAAAAAAAAA------------------------------------------------------------------------

		public void PferdBewegungsmuster(String button, String arraySpielfeld [][]) {
		
		buttonKoordinaten = dieSteuerung.gibButtonKoordinaten(button);
		
		x= buttonKoordinaten [0];
		y= buttonKoordinaten [1];
		
		//----------------------------------------------------------------------
		// PFERD unten links
		
		try {
			
			if (dieGui.pruefeObVerbuendeter(x-2, y+1)==true) {
				
				
				
			} else if(dieGui.pruefeObGegner(x-2,y+1)!="-1"){
				
				gegnerString = dieGui.pruefeObGegner(x-2, y+1);
				
				dieGui.schreibeGegnerButton(x-2, y+1, gegnerString, button);
				
				

			}else{
				
				dieGui.setzteFeld(x-2,y+1,dieGui.iBlauesFeld,"blau");
				
			}
			
			
			
			} catch (Exception e) {
			
		
		
			}
		
	//----------------------------------------------------------------------
	 //Unten rechts

	try {
		
		if (dieGui.pruefeObVerbuendeter(x+2, y+1)==true) {
			
			
			
		} else if(dieGui.pruefeObGegner(x+2,y+1)!="-1"){
			
			gegnerString = dieGui.pruefeObGegner(x+2, y+1);
			
			dieGui.schreibeGegnerButton(x+2, y+1, gegnerString, button);
			
			

		}else{
			
			dieGui.setzteFeld(x+2,y+1,dieGui.iBlauesFeld,"blau");
			
		}
		
		
		
		} catch (Exception e) {
		


		}

	//----------------------------------------------------------------------
	//oben links

	try {

	if (dieGui.pruefeObVerbuendeter(x-2, y-1)==true) {
		
		
		
	} else if(dieGui.pruefeObGegner(x-2,y-1)!="-1"){
		
		gegnerString = dieGui.pruefeObGegner(x-2, y-1);
		
		dieGui.schreibeGegnerButton(x-2, y-1, gegnerString, button);
		
		

	}else{
		
		dieGui.setzteFeld(x-2,y-1,dieGui.iBlauesFeld,"blau");
		
	}



	} catch (Exception e) {



	}

	//----------------------------------------------------------------------
	//Oben rechts

	try {

	if (dieGui.pruefeObVerbuendeter(x+2, y-1)==true) {
		
		
		
	} else if(dieGui.pruefeObGegner(x+2,y-1)!="-1"){
		
		gegnerString = dieGui.pruefeObGegner(x+2, y-1);
		
		dieGui.schreibeGegnerButton(x+2, y-1, gegnerString, button);
		
		

	}else{
		
		dieGui.setzteFeld(x+2,y-1,dieGui.iBlauesFeld,"blau");
		
	}



	} catch (Exception e) {



	}

			
	
	//----------------------------------------------------------------------
		// PFERD unten links
		
		try {
			
			if (dieGui.pruefeObVerbuendeter(x-1, y+2)==true) {
				
				
				
			} else if(dieGui.pruefeObGegner(x-1,y+2)!="-1"){
				
				gegnerString = dieGui.pruefeObGegner(x-1, y+2);
				
				dieGui.schreibeGegnerButton(x-1, y+2, gegnerString, button);
				
				

			}else{
				
				dieGui.setzteFeld(x-1,y+2,dieGui.iBlauesFeld,"blau");
				
			}
			
			
			
			} catch (Exception e) {
			
		
		
			}
		
	//----------------------------------------------------------------------
	 //Unten rechts

	try {
		
		if (dieGui.pruefeObVerbuendeter(x+1, y+2)==true) {
			
			
			
		} else if(dieGui.pruefeObGegner(x+1,y+2)!="-1"){
			
			gegnerString = dieGui.pruefeObGegner(x+1, y+2);
			
			dieGui.schreibeGegnerButton(x+1, y+2, gegnerString, button);
			
			

		}else{
			
			dieGui.setzteFeld(x+1,y+2,dieGui.iBlauesFeld,"blau");
			
		}
		
		
		
		} catch (Exception e) {
		


		}

	//----------------------------------------------------------------------
	//oben links

	try {

	if (dieGui.pruefeObVerbuendeter(x-1, y-2)==true) {
		
		
		
	} else if(dieGui.pruefeObGegner(x-1,y-2)!="-1"){
		
		gegnerString = dieGui.pruefeObGegner(x-1, y-2);
		
		dieGui.schreibeGegnerButton(x-1, y-2, gegnerString, button);
		
		

	}else{
		
		dieGui.setzteFeld(x-1,y-2,dieGui.iBlauesFeld,"blau");
		
	}



	} catch (Exception e) {



	}

	//----------------------------------------------------------------------
	//Oben rechts

	try {

	if (dieGui.pruefeObVerbuendeter(x+1, y-2)==true) {
		
		
		
	} else if(dieGui.pruefeObGegner(x+1,y-2)!="-1"){
		
		gegnerString = dieGui.pruefeObGegner(x+1, y-2);
		
		dieGui.schreibeGegnerButton(x+1, y-2, gegnerString, button);
		
		

	}else{
		
		dieGui.setzteFeld(x+1,y-2,dieGui.iBlauesFeld,"blau");
		
	}



	} catch (Exception e) {



	}

			
		} //Klammer ende Pferd bewegungsmustermethode
	
	
//-------------------------------------------------------------------------------------------------------------------	
	
	// Assoziation mit Gui:
	
	public void linkGui(Gui g) {
		
		dieGui = g;
		
	}
	
	// Assoziation mit Steuerung:
	
		public void linkSteuerung(Steuerung s) {
			
			dieSteuerung = s;
			
		}
	
}
